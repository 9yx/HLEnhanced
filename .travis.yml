# Use the C base
language: c

# Linux - use Ubuntu 14.04 Trusty Tahr instead of 12.04 Precise Pengolin, this
# is required for the correct version of libsdl2-dev.
sudo: required
dist: trusty

# Linux - add the Ubuntu restricted tool chain to install GCC 6 and SDL2's dev
# package
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - libsdl2-dev
    - linux-libc-dev
    - gcc-6-multilib
    - g++-6-multilib

matrix:
  allow_failures:
    # Mac OS X Mavericks 10.9.5 (Xcode 6.1)
    - os: osx
  include:
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Everything disabled
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=0 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Opposing Force
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Opposing Force + AngelScript
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=1 -DUSE_AS_SQL=0"
    # Ubuntu 14.04 Trusty Tahr amd64 (Linux) GCC 6
    # Opposing Force + AngelScript + MariaDB
    - os: linux
      env: COMPILER=gcc-6 BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=1 -DUSE_AS_SQL=1 -DMARIADB=${TRAVIS_BUILD_DIR}/external/MariaDB/lib/libmariadb.so.2 -DSQLITE3=${TRAVIS_BUILD_DIR}/external/SQLite/lib/libsqlite3.so"
    # Mac OS X Mavericks 10.9.5 (Xcode 6.1)
    # Everything disabled
    - os: osx
      env: BUILD_RULES="-DUSE_OPFOR=0 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
      osx_image: beta-xcode6.1
    # Mac OS X Mavericks 10.9.5 (Xcode 6.1)
    # Opposing Force
    - os: osx
      env: BUILD_RULES="-DUSE_OPFOR=1 -DUSE_ANGELSCRIPT=0 -DUSE_AS_SQL=0"
      osx_image: beta-xcode6.1
    # TODO: Add other OS X build matrix when AngelScript and MariaDB OS X binaries are built

before_install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo dpkg --add-architecture i386
      sudo apt-get -qq update
      sudo apt-get install -y linux-libc-dev:i386
    else
      brew update
    fi

install:
  # Prepare the dependencies, build and fake Steam common directories for Travis
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - STEAMCOMMON_DIR="${TRAVIS_BUILD_DIR}/steam_common"
  - mkdir -p ${DEPS_DIR} && mkdir -p ${STEAMCOMMON_DIR} && mkdir -p ${STEAMCOMMON_DIR} && cd ${DEPS_DIR}
  # Get the latest CMake version
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      CMAKE_URL="http://www.cmake.org/files/v3.6/cmake-3.6.2-Darwin-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/CMake.app/Contents/bin:${PATH}
    fi

before_script:
  # Move to build directory
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && cd build

script:
  # Just execute the cmake and make commands
  - |
    if [[ "${COMPILER}" == "gcc-6" ]]; then
      cmake -DCMAKE_CXX_COMPILER="g++-6" -DCMAKE_C_COMPILER="gcc-6" -DSTEAMCOMMON=${STEAMCOMMON_DIR} -DSDL2=${TRAVIS_BUILD_DIR}/external/SDL2/lib/libSDL2-2.0.so.0 -DVGUI1=${TRAVIS_BUILD_DIR}/lib/public/vgui.so ${BUILD_RULES} ..
    else
      cmake -DSTEAMCOMMON=${STEAMCOMMON_DIR} -DSDL2=${TRAVIS_BUILD_DIR}/external/SDL2/lib/libSDL2-2.0.0.dylib -DVGUI1=${TRAVIS_BUILD_DIR}/lib/public/vgui.dylib ${BUILD_RULES} ..
    fi
  - make

notifications:
  email: false
